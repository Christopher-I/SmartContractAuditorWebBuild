{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/BlockchainProjects/SmartContractAuditor/SmartContractAuditor/src/components/sections/landingPageSection1.js\";\nimport React from 'react';\nimport { Segment, Form, TextArea, Progress, Message, Table, Grid } from 'semantic-ui-react';\n\nclass landingPageSection1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangesToContract = event => {\n      this.props.removeErrorMessage();\n      this.props.storeContractCodeToState(event.target.value);\n      this.setState({\n        contract: event.target.value\n      });\n    };\n\n    this.generateNumberedList = () => {\n      let x = lineNumbers();\n      let list = x.map(numbers => {\n        return React.createElement(Table.Row, {\n          key: numbers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, numbers));\n      }); //update loading bar\n\n      this.setState({\n        lineNumbers: list\n      });\n    };\n\n    this.state = {\n      contractCode: '',\n      lineNumbers: ''\n    };\n  } //when smart contract code changes update the state of the parent\n\n\n  componentDidMount() {\n    this.generateNumberedList();\n  } //generate rendered number list on side of page \n\n\n  render() {\n    const Input = Form.Input,\n          Group = Form.Group,\n          Field = Form.Field;\n    return React.createElement(Segment, {\n      style: {\n        height: '850px',\n        overflow: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Ethereum Smart Contract Auditor\"), React.createElement(\"p\", {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Auditor is still in test phase and will be improved over time visit https://github.com/Christopher-I/SmartContractAuditor\"), React.createElement(Form, {\n      error: !!this.props.errorMessage,\n      success: !!this.props.successMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      percent: this.props.percent,\n      autoSuccess: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Message, {\n      error: true,\n      content: this.props.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: this.props.successMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Table, {\n      color: 'grey',\n      celled: true,\n      compact: true,\n      basic: \"very\",\n      selectable: true,\n      style: {\n        marginTop: '11px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Table.Body, {\n      style: {\n        fontSize: '8px',\n        color: 'grey',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.lineNumbers))), React.createElement(Grid.Column, {\n      width: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: this.props.contractCode,\n      onChange: this.handleChangesToContract,\n      style: {\n        fontSize: '14px',\n        lineHeight: '27px',\n        height: '10000px',\n        color: '#202020'\n      },\n      placeholder: \"Paste your smart contract code here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default landingPageSection1;\n\nconst lineNumbers = () => {\n  let array = [];\n  let i;\n\n  for (i = 1; i < 1001; i++) {\n    array.push(i); //[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25];\n  }\n\n  return array;\n}; // <Field style ={{maxHeight:'680px',minHeight:'680px'}} control={TextArea} label='Full Description' placeholder=\"Paste your smart contract code here...\"\n//   value= {this.state.contract}  onChange={this.handleChangesToContract}  />\n// <TextArea value= {this.state.contract} onChange={this.handleChangesToContract} style ={{maxHeight:'680px',minHeight:'680px'}} placeholder=\"Paste your smart contract code here...\"/>","map":{"version":3,"sources":["/Users/chris/Documents/BlockchainProjects/SmartContractAuditor/SmartContractAuditor/src/components/sections/landingPageSection1.js"],"names":["React","Segment","Form","TextArea","Progress","Message","Table","Grid","landingPageSection1","Component","constructor","props","handleChangesToContract","event","removeErrorMessage","storeContractCodeToState","target","value","setState","contract","generateNumberedList","x","lineNumbers","list","map","numbers","state","contractCode","componentDidMount","render","Input","Group","Field","height","overflow","color","errorMessage","successMessage","percent","marginTop","fontSize","textAlign","lineHeight","array","i","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Segment, Form, TextArea, Progress, Message,Table, Grid} from 'semantic-ui-react';\n\n\nclass landingPageSection1 extends React.Component{\n\nconstructor(props) {\n    super(props);\n\tthis.state = {\n\t\tcontractCode:'',\n\t\tlineNumbers:''\n\t}\n}\n\n\n//when smart contract code changes update the state of the parent\n\thandleChangesToContract=(event)=>{\n\t\tthis.props.removeErrorMessage(); \n\t\tthis.props.\n\t\tstoreContractCodeToState(event.target.value);\n\t\tthis.setState({\n\t\t\tcontract:event.target.value\n\t\t});\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.generateNumberedList();\n\t}\n\n\t//generate rendered number list on side of page \n\tgenerateNumberedList=()=>{\n\t\tlet x = lineNumbers();\n\n\tlet list = x.map(numbers => {        \n            return (\n            \t<Table.Row key={numbers}>\n\t\t\t\t        <Table.Cell >\n\t\t\t\t          {numbers}\n\t\t\t\t        </Table.Cell>\n\t\t\t\t </Table.Row>\n            );   \n        });\n\n\t     //update loading bar\n        this.setState({\n\t\t  \t\tlineNumbers :list\n\n\t\t  \t})\n\n\t}\n\n\n\n\trender(){\n\tconst {Input, Group,Field} = Form;\n\treturn (\n\t\t<Segment style = {{height:'850px',overflow: 'scroll'}}>\n\t\t\t<h1> Ethereum Smart Contract Auditor</h1> \n\t\t\t <p style ={{color:'grey'}}> Auditor is still in test phase and will be improved over time\n\t\t\t  visit https://github.com/Christopher-I/SmartContractAuditor\n\t\t\t </p>\n\t\t\t <Form error= {!!this.props.errorMessage} success={!!this.props.successMessage}>\n\t\t\t<Progress percent={this.props.percent} autoSuccess />\n\t\t\t<Message error content = {this.props.errorMessage}/>\n\t\t\t<Message success header = \"Success!\" content = {this.props.successMessage}/>\n\n\n\t\t\t<Grid>\n\t\t\t<Grid.Row >\n\t\t\t<Grid.Column width={1}>\n\t\t\t\t  <Table color={'grey'} celled compact basic ='very' selectable style={{marginTop:'11px'}}>\n\t\t\t\t    <Table.Body style={{fontSize:'8px',color :'grey',textAlign:'center'}}>\n\t\t\t\t    {this.state.lineNumbers}\n\t\t\t\t      </Table.Body>\n  \t\t\t</Table>\n\n\t\t\t</Grid.Column>\n\n\t\t\t<Grid.Column width={15}>\n\t\t\t<TextArea value= {this.props.contractCode} onChange={this.handleChangesToContract} style ={{fontSize:'14px',lineHeight:'27px',height:'10000px',color:'#202020'}} placeholder=\"Paste your smart contract code here...\"/>\n\t\t\t </Grid.Column>\n\n\t\t\t </Grid.Row>\n\t\t\t </Grid>\n\n\t\t\t </Form>\n\t\t </Segment>\n\t\t)\n\t}\n}\n\nexport default landingPageSection1;\n\n\n\t\t\tconst lineNumbers=()=>{\n\t\t\t\tlet array=[];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i=1; i<1001; i++){\n\t\t\t\t\tarray.push(i);\n\t\t\t\t//[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25];\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t\t} \n\n\t\t\t // <Field style ={{maxHeight:'680px',minHeight:'680px'}} control={TextArea} label='Full Description' placeholder=\"Paste your smart contract code here...\"\n    //   value= {this.state.contract}  onChange={this.handleChangesToContract}  />\n\n    // <TextArea value= {this.state.contract} onChange={this.handleChangesToContract} style ={{maxHeight:'680px',minHeight:'680px'}} placeholder=\"Paste your smart contract code here...\"/>"]},"metadata":{},"sourceType":"module"}