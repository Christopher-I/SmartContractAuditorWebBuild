{"ast":null,"code":"require('es6-shim');\n\nvar solc = require('solc/wrapper');\n\nfunction loadScript(name, url, callback) {\n  var script = document.getElementById(\"script-\" + name);\n\n  if (script != null) {\n    script.parentElement.removeChild(script);\n  }\n\n  script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.setAttribute(\"id\", \"script-\" + name);\n\n  if (script.readyState) {\n    //IE\n    script.onreadystatechange = function () {\n      if (script.readyState == \"loaded\" || script.readyState == \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    //Others\n    script.onload = function () {\n      callback();\n    };\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n}\n\nfunction loadVersion(version, callback) {\n  delete window.Module; // NOTE: workaround some browsers\n\n  window.Module = undefined;\n  var url = \"https://ethereum.github.io/solc-bin/bin/\" + version;\n  loadScript(\"solc\", url, function () {\n    var compiler = solc(window.Module);\n    callback(compiler);\n  });\n} // Also loads global variables called \"soljsonSources\" and \"soljsonReleases\"\n\n\nfunction getVersions(callback) {\n  var url = \"https://ethereum.github.io/solc-bin/bin/list.js\";\n  loadScript(\"solc-list\", url, function () {\n    callback(soljsonSources, soljsonReleases);\n  });\n}\n\nmodule.exports = {\n  'getVersions': getVersions,\n  'loadVersion': loadVersion\n};","map":null,"metadata":{},"sourceType":"script"}